{
    "swagger": "2.0",
    "info": {
        "description": "API for managing Bitcoin transactions.",
        "title": "BTC Transaction Manager",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/transactions": {
            "get": {
                "description": "Retrieve transactions with optional filters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve multiple transactions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start Date",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End Date",
                        "name": "end_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Input Address",
                        "name": "input_address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Output Address",
                        "name": "output_address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Field for sorting results",
                        "name": "sort_field",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Sort in ascending order",
                        "name": "asc",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of results per page",
                        "name": "perPage",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Transaction"
                        }
                    }
                }
            }
        },
        "/transactions/blockchain/{hash}": {
            "put": {
                "description": "Fetch data from the blockchain and update specific fields of a transaction.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a transaction using blockchain data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Transaction Hash",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/transactions/{hashId}": {
            "get": {
                "description": "Retrieve a specific transaction by hash or id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve a single transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Transaction Hash or ID",
                        "name": "hashId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Transaction"
                        }
                    }
                }
            },
            "put": {
                "description": "Update specific fields of a transaction.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Transaction Hash or ID",
                        "name": "hashId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Transaction object",
                        "name": "transaction",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TransactionToUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TransactionToUpdate"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove a transaction based on provided hash or id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Transaction Hash or ID",
                        "name": "hashId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "transaction deleted",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/transactions/{hash}": {
            "post": {
                "description": "Create a new transaction based on provided hash.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Add a new transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Transaction Hash",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Transaction"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Inputs": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "index": {
                    "type": "integer"
                },
                "previous_txid": {
                    "type": "integer"
                },
                "value": {
                    "type": "integer"
                }
            }
        },
        "models.Outputs": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "value": {
                    "type": "integer"
                }
            }
        },
        "models.Transaction": {
            "type": "object",
            "properties": {
                "block_height": {
                    "type": "integer"
                },
                "block_index": {
                    "type": "integer"
                },
                "confirmations": {
                    "type": "integer"
                },
                "fee": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "inputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Inputs"
                    }
                },
                "outputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Outputs"
                    }
                },
                "time": {
                    "type": "string"
                },
                "transaction_hash": {
                    "type": "string"
                }
            }
        },
        "models.TransactionToUpdate": {
            "type": "object",
            "properties": {
                "block_height": {
                    "type": "integer"
                },
                "block_index": {
                    "type": "integer"
                },
                "confirmations": {
                    "type": "integer"
                },
                "fee": {
                    "type": "integer"
                },
                "inputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Inputs"
                    }
                },
                "outputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Outputs"
                    }
                },
                "time": {
                    "type": "string"
                }
            }
        }
    }
}